name: test

on:
  push:
    branches:
      - "**"
    tags:
      - "!**"
  workflow_call:


permissions:
  pull-requests: write

jobs:
  Tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        PYTHON_VERSION: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{matrix.PYTHON_VERSION}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.PYTHON_VERSION}}

      - name: Get full Python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up cache
        uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/uv.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: uv run pip --version >/dev/null 2>&1 || rm -rf .venv

      - name: Check that the lock file is up to date
        run: uv lock --check

      - name: Install dependencies
        run: uv sync  --no-install-project

      - name: Install project
        run: uv pip install --group dev --group docs

      - name: Style checking
        run: uv run ruff format --check fgpyo tests

      - name: Run lint
        run: uv run ruff check fgpyo tests

      - name: Run mypy
        run: uv run mypy fgpyo tests --config=pyproject.toml

      - name: Run pytest
        run: uv run pytest --cov=fgpyo --cov-report=xml --cov-branch 

      - name: Run docs
        run: |
          set -euo pipefail
          uv run mkdocs build --strict

      - name: Upload code coverage
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
